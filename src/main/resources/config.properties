#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
threads=1

# HADOOP general conf
hadoop.core.site.path=/etc/hadoop/conf/core-site.xml
hadoop.hdfs.site.path=/etc/hadoop/conf/hdfs-site.xml
hadoop.ozone.site.path=/etc/hadoop/conf/ozone-site.xml
hadoop.hbase.site.path=/etc/hbase/conf/hbase-site.xml
hadoop.user={{ hadoop_user | default('') }}
hadoop.home={{ hadoop_home | default('') }}

kerberos.auth={{ kerb_auth | default('') }}
kerberos.user={{ kerb_user | default('') }}
kerberos.keytab={{ kerb_keytab | default('') }}

truststore.location={{ truststore_location | default('') }}
truststore.password={{ truststore_password | default('') }}

# HDFS
hdfs.uri=hdfs://{{ hdfs_nameservice | default('') }}:{{ hdfs_port }}/
hdfs.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
hdfs.auth.kerberos.user=${kerberos.user}
hdfs.auth.kerberos.keytab=${kerberos.keytab}


# HBASE
hbase.zookeeper.quorum={{ zk_quorum_with_port | default('') }}
hbase.zookeeper.property.clientPort={{ zk_port | default('') }}
zookeeper.znode.parent={{ hbase_znode }}
hbase.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
hbase.security.user=${kerberos.user}
hbase.security.keytab=${kerberos.keytab}


# OZONE
ozone.service.id={{ ozone_service_id | default('') }}
ozone.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
ozone.auth.kerberos.user=${kerberos.user}
ozone.auth.kerberos.keytab=${kerberos.keytab}


# HIVE
hive.zookeeper.server={{ zk_quorum_with_port | default('') }}
hive.zookeeper.namespace={{ hive_zk_namespace }}
hive.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
hive.security.user=${kerberos.user}
hive.security.keytab=${kerberos.keytab}
hive.truststore.location=${truststore.location}
hive.truststore.password=${truststore.password}


# SOLR
solr.server.url={{ solr_url | default('') }}
solr.server.port={{ solr_port | default('') }}
solr.security.ssl={{ solr_ssl | default('') }}
solr.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
solr.auth.kerberos.keytab=${kerberos.keytab}
solr.auth.kerberos.user=${kerberos.user}
solr.truststore.location=${truststore.location}
solr.truststore.password=${truststore.password}


# KAFKA
kafka.brokers={{ kafka_url | default('') }}
kafka.security.protocol={{ kafka_protocol | default('') }}
schema.registry.url={{ sr_url | default('') }}
schema.registry.tls=true
# It is not needed to fill below configuration if KERBEROS is not activated (i.e. protocol is PLAINTEXT)
kafka.keystore.location={{ keystore | default('') }}
kafka.truststore.location=${truststore.location}
kafka.keystore.pasword={{ keystore_pass | default('') }}
kafka.keystore.key.password={{ keystore_key_pass | default('') }}
kafka.truststore.password=${truststore.password}
kafka.sasl.mechanism=GSSAPI
kafka.sasl.kerberos.service.name=kafka
kafka.auth.kerberos.keytab=${kerberos.keytab}
kafka.auth.kerberos.user=${kerberos.user}


# KUDU
kudu.master.server={{ kudu_url | default('') }}
kudu.auth.kerberos=${kerberos.auth}
# It is not needed to fill below configuration if KERBEROS is not activated
kudu.security.user=${kerberos.user}
kudu.security.keytab=${kerberos.keytab}
kudu.truststore.location=${truststore.location}
kudu.truststore.password=${truststore.password}
