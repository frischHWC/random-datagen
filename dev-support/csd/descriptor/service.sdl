{
  "name" : "DATAGEN",
  "label" : "DATAGEN",
  "description" : "The service to generate Data into various services of CDP platform",
  "version" : "1.0",
  "parcel" : {
      "requiredTags" : [ "datagen" ],
      "optionalTags" : []
  },
  "runAs" : { 
    "user" : "datagen",
    "group" : "datagen",
    "principal" : "datagen"
   },
   "maxInstances" : 1,
   "compatibility" : {
    "generation" : 2,
    "cdhVersion" : {
      "min" : "7.1.7",
      "max" : "7.1.8"
    }
  },
  "rolesWithExternalLinks" : ["DATAGEN_SERVER"],
   "hdfsDirs" : [
       {
         "name" : "CreateUserHdfsHomeDirCommand",
         "label" : "Create Datagen User Home Dir",
         "description" : "Creates the Datagen user directory in HDFS",
         "directoryDescription" : "Datagen HDFS user directory",
         "path" : "/user/${user}",
         "permissions" : "0755"
       }
   ],
  "serviceInit" : {
      "preStartSteps" : [
        {
          "commandName" : "CreateUserHdfsHomeDirCommand"
        }
      ]
   },
  "commands" : [
    {
     "name" : "gen_json_local",
     "label" : "Generates local JSON",
     "description" : "Generates JSON Data locally",
     "roleCommand" : "gen_json_local",
     "roleName" : "DATAGEN_SERVER",
     "runMode" : "single"
    }
   ],
  "kerberos" : "${kerberos_enabled}",
  "parameters" : [
    {
        "name" : "kerberos_enabled",
        "label" : "Kerberos Enabled",
        "description" : "Set to true if Kerberos is enabled for services where data will be generated. Principal used is 'datagen' and keytab is generated by CM",
        "required" : true,
        "configurableInWizard" : true,
        "default" : true,
        "type" : "boolean"
    },
    {
        "name" : "tls_enabled",
        "label" : "TLS Enabled",
        "description" : "Set to true if TLS is enabled for services where data will be generated. Used to connect to HIVE, KAFKA, SOLR, KUDU.",
        "required" : true,
        "configurableInWizard" : true,
        "default" : true,
        "type" : "boolean"
    }
    ],
  "serviceDependencies" : [
    {
     "name" : "HDFS"
    }, 
    {
      "name" : "HBASE" 
    }, 
    {
      "name" : "HIVE" 
    }, 
    {
      "name" : "KAFKA" 
    }, 
    {
      "name" : "KUDU" 
    }, 
    {
      "name" : "OZONE" 
    }, 
    {
      "name" : "SOLR" 
    },
    {
      "name" : "RANGER"
    },
    {
      "name" : "SCHEMAREGISTRY"
    }
  ],
  "roles" : [
   {
    "name" : "DATAGEN_SERVER",
    "label" : "Datagen Web Server",
    "pluralLabel" : "Web Servers",
    "jvmBased" : "true",
    "startRunner" : {
      "program" : "scripts/control.sh",
      "args" : [ "start" ],
      "environmentVariables" : {
        "WEBSERVER_PORT" : "4242"
       }
     },
     "configWriter" : {
             "generators" : [
               {
                 "filename" : "service.properties",
                 "configFormat" : "jinja",
                 "template" : "aux/templates/properties.j2"
               }
             ]
     },
     "kerberosPrincipals" : [
             {
               "name" : "datagen_principal",
               "primary" : "${principal}",
               "instance" : "${host}"
             }
           ],
     "sslServer" : {
             "keystoreFormat" : "jks",
             "keyIdentifier" : "clientkey",
             "enabledConfigName" : "tls_enabled",
             "keystoreLocationConfigName" : "keystore_file",
             "keystorePasswordConfigName" : "keystore_password",
             "keyPasswordOptionality" : "optional",
             "keystoreKeyPasswordConfigName" : "keystore_key_password",
             "keystorePasswordCredentialProviderCompatible" : true,
             "keystoreKeyPasswordCredentialProviderCompatible" : true,
             "autoTlsMode": "auto"
           },
           "sslClient" : {
             "truststoreLocationConfigName" : "truststore_location",
             "truststorePasswordConfigName" : "truststore_password",
             "truststorePasswordCredentialProviderCompatible" : true,
             "autoTlsMode" : "auto"
     },
       "logging" : {
         "dir" : "/var/log/datagen/",
         "filename" : "datagen.log",
         "modifiable" : true,
         "configName" : "log.dir",
         "loggingType" : "logback"
       }
     "externalLink" : {
       "name" : "datagen_swagger",
       "label" : "Datagen Swagger Web UI",
       "url" : "http://${host}:8080/swagger-ui.html"
     },
     "topology" : {
       "minInstances" : "0",
       "maxInstances" : "100",
       "softMinInstances" : "1",
       "softMaxInstances" : "1",
       "requiresOddNumberOfInstances" : "false"
     },
     "commands" : [
       {
        "name" : "gen_json_local",
        "label" : "Gen JSON locally",
        "description" : "Generates JSON Data locally",
        "expectedExitCodes" : [0],
        "requiredRoleState" : "running",
        "commandRunner" : {
          "program" : "scripts/control.sh",
          "args" : ["local_json"]
        }
       }
      ],
    "parameters" : [
    {
        "name" : "number_of_batches",
        "label" : "Number of Batches",
        "description" : "The number of batch to run when launching a data generation",
        "required" : true,
        "configurableInWizard" : true,
        "default" : 20,
        "min": 0,
        "type" : "long"
    },
    {
        "name" : "number_of_rows",
        "label" : "Number of Rows",
        "description" : "The number of row to run when launching a data generation",
        "required" : true,
        "configurableInWizard" : true,
        "default" : 20,
        "min": 0,
        "type" : "long"
    },
    {
        "name" : "data_model",
        "label" : "Data Model",
        "description" : "The Model of data to use to generate data",
        "required" : true,
        "configurableInWizard" : true,
        "default" : "full_model.json",
        "type" : "string_enum",
        "validValues": ["test_model.json", "full_model.json"]
    },
    {
        "name" : "app_port",
        "label" : "Web Server Port",
        "description" : "Port that Web Server should expose",
        "required" : true,
        "configurableInWizard" : true,
        "default" : 4242,
        "type" : "port"
    },
    {
        "name" : "threads",
        "label" : "Thread Number",
        "description" : "The number of parallel thread to launch data generation",
        "required" : true,
        "configurableInWizard" : true,
        "default" : 1,
        "min": 1,
        "type" : "long"
    },

    {
        "name" : "hdfs_uri",
        "label" : "HDFS URI",
        "description" : "HDFS URI to connect to as: hdfs://<NAMESERVICE>:<PORT>/",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "hbase_zk_quorum",
        "label" : "HBASE Zookeeper Quorum",
        "description" : "Zookeeper to connect to as: <ZK_SERVER_1>,<ZK_SERVER_2>,<ZK_SERVER_3>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "hbase_zk_quorum_port",
        "label" : "HBASE Zookeeper Quorum Port",
        "description" : "Zookeeper to connect to as: <ZK_PORT>",
        "default" : "",
        "type" : "port"
    },
    {
        "name" : "hbase_znode_parent",
        "label" : "HBASE Zookeeper Znode",
        "description" : "Zookeeper znode as: <ZNODE>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "ozone_service_id",
        "label" : "Ozone Service ID",
        "description" : "Ozone service ID to connect to as: <SERVICEID>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "hive_zk_quorum",
        "label" : "Hive Zookeeper Quorum",
        "description" : "Zookeeper to connect to as: <ZK_SERVER_1>:<ZK_PORT>,<ZK_SERVER_2>:<ZK_PORT>,<ZK_SERVER_3>:<ZK_PORT>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "hive_znode",
        "label" : "Hive Zookeeper Znode",
        "description" : "Zookeeper znode as: <ZNODE>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "solr_host",
        "label" : "Solr Host",
        "description" : "SolR Host as: <SOLR_SERVER>",
        "default" : "",
        "type" : "string"
    },
    {
        "name" : "solr_port",
        "label" : "Solr Port",
        "description" : "SolR Port as: <SOLR_PORT>",
        "default" : "",
        "type" : "port"
    },
    {
        "name" : "kafka_url",
        "label" : "Kafka URL",
        "description" : "Kafka URL as: <KAFKA_SERVER_1>:<KAFKA_PORT>,<KAFKA_SERVER_2>:<KAFKA_PORT>",
        "default" : "",
        "type" : "string"
    },
    {
         "name" : "schema_registry_url",
         "label" : "Schema Registry URL",
         "description" : "Schema Registry URL as: <SR_SERVER>:<SR_PORT>",
         "default" : "",
         "type" : "string"
     },
    {
        "name" : "kafka_protocol",
        "label" : "Kafka Protocol",
        "description" : "Kafka Protocol as one of proposed possibilities",
        "default" : "SASL_SSL",
        "type" : "string_enum",
        "validValues": ["PLAINTEXT", "SASL_PLAINTEXT", "SASL_SSL", "SSL"]
    },
    {
        "name" : "kafka_sasl_mechanism",
        "label" : "Kafka SASL Mechanism",
        "description" : "Kafka SASL Mechanism (should not be changed, except under particular circumstances)",
        "default" : "GSSAPI",
        "type" : "string"
    },
    {
        "name" : "kafka_sasl_service_name",
        "label" : "Kafka SASL Service Name",
        "description" : "Kafka SASL Service Name (should not be changed, except under particular circumstances)",
        "default" : "kafka",
        "type" : "string"
    },
    {
        "name" : "kudu_url",
        "label" : "KUDU URL",
        "description" : "Kudu URL as: <KUDU_MASTER_1>,<KUDU_MASTER_2>,<KUDU_MASTER_3>",
        "default" : "",
        "type" : "string"
    },

    {
        "name" : "core_site_path",
        "label" : "Hadoop Core Site Path",
        "description" : "Path to core-site.xml. This is used to auto-discover services: HDFS. (if settings are not explicitly set)",
        "default" : "/etc/hadoop/conf/core-site.xml",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "hdfs_site_path",
        "label" : "Hadoop HDFS Site Path",
        "description" : "Path to hdfs-site.xml. This is used to auto-discover services: HDFS. (if settings are not explicitly set)",
        "default" : "/etc/hadoop/conf/hdfs-site.xml",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "ozone_site_path",
        "label" : "Hadoop Ozone Site Path",
        "description" : "Path to ozone-site.xml. This is used to auto-discover services: OZONE. (if settings are not explicitly set)",
        "default" : "/etc/hadoop/conf/ozone-site.xml",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "hbase_site_path",
        "label" : "Hadoop HBase Site Path",
        "description" : "Path to hbase-site.xml. This is used to auto-discover services: HBASE. (if settings are not explicitly set)",
        "default" : "/etc/hbase/conf/hbase-site.xml",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "hive_site_path",
        "label" : "Hadoop Hive Site Path",
        "description" : "Path to core-site.xml. This is used to auto-discover services: HIVE. (if settings are not explicitly set)",
        "default" : "/etc/hive/conf/hive-site.xml",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "solr_env_path",
        "label" : "Solr env.sh path",
        "description" : "Path to solr-env.sh. This is used to auto-discover services: SOLR. (if settings are not explicitly set)",
        "default" : "/etc/solr/conf/solr-env.sh",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "kafka_client_conf_path",
        "label" : "Kafka client conf Path",
        "description" : "Path to kafka-client.conf. This is used to auto-discover services: KAFKA. (if settings are not explicitly set)",
        "default" : "/etc/kafka/conf/kafka-client.conf",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "kafka_cluster_conf_path",
        "label" : "Kafka cluster conf path",
        "description" : "Path to cluster-config.properties. This is used to auto-discover services: KAFKA. (if settings are not explicitly set)",
        "default" : "/etc/kafka/conf/kafka-cluster-configs.properties",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "schema_registry_conf_path",
        "label" : "Schema Registry Configuration Path",
        "description" : "Path to schema_registry_client.properties. This is used to auto-discover services: KAFKA & SCHEMA REGISTRY. (if settings are not explicitly set)",
        "default" : "/etc/schemaregistry/conf/schema_registry_client.properties",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },
    {
        "name" : "kudu_conf_path",
        "label" : "Kudu configuration Path. This is used to auto-discover services: KUDU. (if settings are not explicitly set)",
        "description" : "Path to .",
        "default" : "",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    },

    {
        "name" : "custom_model_path",
        "label" : "Custom Model Path",
        "description" : "The custom Model Path to use instead of the furnished data model. This file must exists on the machine where the web server is installed",
        "default" : "",
        "type" : "path",
        "pathType": "serviceSpecific",
        "mode": "0755"
    }
  ]
  }
 ]
   
}